{"ast":null,"code":"import { configureStore, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_KEY, TMDB_BASE_URL } from \"../utils/constants\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// changes begin \nconst initialState = {\n  movies: [],\n  genresLoaded: false,\n  genres: []\n};\nexport const getGenres = createAsyncThunk(\"netflix/genres\", async () => {\n  const {\n    data: {\n      genres\n    }\n  } = await axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=3d39d6bfe362592e6aa293f01fbcf9b9\");\n  return genres;\n});\nconst createArrayFromRawData = (array, moviesArray, genres) => {\n  array.forEach(movie => {\n    const movieGenres = [];\n    movie.genre_ids.forEach(genre => {\n      const name = genres.find(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === genre;\n      });\n      if (name) movieGenres.push(name.name);\n    });\n    if (movie.backdrop_path) moviesArray.push({\n      id: movie.id,\n      name: movie !== null && movie !== void 0 && movie.original_name ? movie.original_name : movie.original_title,\n      image: movie.backdrop_path,\n      genres: movieGenres.slice(0, 3)\n    });\n  });\n};\nconst getRawData = async function (api, genres) {\n  let paging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const moviesArray = [];\n  for (let i = 1; moviesArray.length < 60 && i < 10; i++) {\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${api}${paging ? `&page=${i}` : \"\"}`);\n    createArrayFromRawData(results, moviesArray, genres);\n  }\n  return moviesArray;\n};\nexport const fetchDataByGenre = createAsyncThunk(\"netflix/genre\", async (_ref2, thunkAPI) => {\n  let {\n    genre,\n    type\n  } = _ref2;\n  const {\n    netflix: {\n      genres\n    }\n  } = thunkAPI.getState();\n  return getRawData(`https://api.themoviedb.org/3/discover/${type}?api_key=3d39d6bfe362592e6aa293f01fbcf9b9&with_genres=${genre}`, genres);\n});\nexport const fetchMovies = createAsyncThunk(\"netflix/trending\", async (_ref3, thunkAPI) => {\n  let {\n    type\n  } = _ref3;\n  const {\n    netflix: {\n      genres\n    }\n  } = thunkAPI.getState();\n  return getRawData(`${TMDB_BASE_URL}/trending/${type}/week?api_key=${API_KEY}`, genres, true);\n});\nexport const getUsersLikedMovies = createAsyncThunk(\"netflix/getLiked\", async email => {\n  const {\n    data: {\n      movies\n    }\n  } = await axios.get(`https://helpful-red-jackrabbit.cyclic.app/api/user/liked/${email}`);\n  if (movies) return movies;else return null;\n});\nexport const removeMovieFromLiked = createAsyncThunk(\"netflix/deleteLiked\", async _ref4 => {\n  let {\n    movieId,\n    movieName,\n    email\n  } = _ref4;\n  const {\n    data: {\n      movies\n    }\n  } = await axios.put(\"https://helpful-red-jackrabbit.cyclic.app/api/user/remove\", {\n    email,\n    movieId\n  });\n  toast.success(`${movieName} removed from the liked list.`);\n  return movies;\n});\nconst NetflixSlice = createSlice({\n  name: \"Netflix\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getGenres.fulfilled, (state, action) => {\n      state.genres = action.payload;\n      state.genresLoaded = true;\n    });\n    builder.addCase(fetchMovies.fulfilled, (state, action) => {\n      state.movies = action.payload;\n    });\n    builder.addCase(fetchDataByGenre.fulfilled, (state, action) => {\n      state.movies = action.payload;\n    });\n    builder.addCase(getUsersLikedMovies.fulfilled, (state, action) => {\n      state.movies = action.payload;\n    });\n    builder.addCase(removeMovieFromLiked.fulfilled, (state, action) => {\n      state.movies = action.payload;\n    });\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    netflix: NetflixSlice.reducer\n  }\n});\nexport const {\n  setGenres,\n  setMovies\n} = NetflixSlice.actions;","map":{"version":3,"names":["configureStore","createAsyncThunk","createSlice","axios","API_KEY","TMDB_BASE_URL","toast","initialState","movies","genresLoaded","genres","getGenres","data","get","createArrayFromRawData","array","moviesArray","forEach","movie","movieGenres","genre_ids","genre","name","find","id","push","backdrop_path","original_name","original_title","image","slice","getRawData","api","paging","i","length","results","fetchDataByGenre","thunkAPI","type","netflix","getState","fetchMovies","getUsersLikedMovies","email","removeMovieFromLiked","movieId","movieName","put","success","NetflixSlice","extraReducers","builder","addCase","fulfilled","state","action","payload","store","reducer","setGenres","setMovies","actions"],"sources":["C:/Users/ATHARV/Desktop/netflix-clone-mern/netflix-clone-mern/netflix-ui/src/store/index.js"],"sourcesContent":["import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { API_KEY, TMDB_BASE_URL } from \"../utils/constants\";\r\nimport {  toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// changes begin \r\nconst initialState = {\r\n  movies: [],\r\n  genresLoaded: false,\r\n  genres: [],\r\n};\r\n\r\nexport const getGenres = createAsyncThunk(\"netflix/genres\", async () => {\r\n  const {\r\n    data: { genres },\r\n  } = await axios.get(\r\n    \"https://api.themoviedb.org/3/genre/movie/list?api_key=3d39d6bfe362592e6aa293f01fbcf9b9\"\r\n  );\r\n  return genres;\r\n});\r\n\r\nconst createArrayFromRawData = (array, moviesArray, genres) => {\r\n  array.forEach((movie) => {\r\n    const movieGenres = [];\r\n    movie.genre_ids.forEach((genre) => {\r\n      const name = genres.find(({ id }) => id === genre);\r\n      if (name) movieGenres.push(name.name);\r\n    });\r\n    if (movie.backdrop_path)\r\n      moviesArray.push({\r\n        id: movie.id,\r\n        name: movie?.original_name ? movie.original_name : movie.original_title,\r\n        image: movie.backdrop_path,\r\n        genres: movieGenres.slice(0, 3),\r\n      });\r\n  });\r\n};\r\n\r\nconst getRawData = async (api, genres, paging = false) => {\r\n  const moviesArray = [];\r\n  for (let i = 1; moviesArray.length < 60 && i < 10; i++) {\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(`${api}${paging ? `&page=${i}` : \"\"}`);\r\n    createArrayFromRawData(results, moviesArray, genres);\r\n  }\r\n  return moviesArray;\r\n};\r\n\r\nexport const fetchDataByGenre = createAsyncThunk(\r\n  \"netflix/genre\",\r\n  async ({ genre, type }, thunkAPI) => {\r\n    const {\r\n      netflix: { genres },\r\n    } = thunkAPI.getState();\r\n    return getRawData(\r\n      `https://api.themoviedb.org/3/discover/${type}?api_key=3d39d6bfe362592e6aa293f01fbcf9b9&with_genres=${genre}`,\r\n      genres\r\n    );\r\n  }\r\n);\r\n\r\nexport const fetchMovies = createAsyncThunk(\r\n  \"netflix/trending\",\r\n  async ({ type }, thunkAPI) => {\r\n    const {\r\n      netflix: { genres },\r\n    } = thunkAPI.getState();\r\n    return getRawData(\r\n      `${TMDB_BASE_URL}/trending/${type}/week?api_key=${API_KEY}`,\r\n      genres,\r\n      true\r\n    );\r\n  }\r\n);\r\n\r\nexport const getUsersLikedMovies = createAsyncThunk(\r\n  \"netflix/getLiked\",\r\n  async (email) => {\r\n    const {\r\n      data: { movies },\r\n    } = await axios.get(`https://helpful-red-jackrabbit.cyclic.app/api/user/liked/${email}`);\r\n    if(movies)\r\n     return movies;\r\n    else \r\n    return null;\r\n  }\r\n);\r\n\r\nexport const removeMovieFromLiked = createAsyncThunk(\r\n  \"netflix/deleteLiked\",\r\n  async ({ movieId,movieName, email }) => {\r\n    const {\r\n      data: { movies },\r\n    } = await axios.put(\"https://helpful-red-jackrabbit.cyclic.app/api/user/remove\", {\r\n      email,\r\n      movieId,\r\n    });\r\n    toast.success(`${movieName} removed from the liked list.`);\r\n    return movies;\r\n  }\r\n);\r\n\r\nconst NetflixSlice = createSlice({\r\n  name: \"Netflix\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getGenres.fulfilled, (state, action) => {\r\n      state.genres = action.payload;\r\n      state.genresLoaded = true;\r\n    });\r\n    builder.addCase(fetchMovies.fulfilled, (state, action) => {\r\n      state.movies = action.payload;\r\n    });\r\n    builder.addCase(fetchDataByGenre.fulfilled, (state, action) => {\r\n      state.movies = action.payload;\r\n    });\r\n    builder.addCase(getUsersLikedMovies.fulfilled, (state, action) => {\r\n      state.movies = action.payload;\r\n    });\r\n    builder.addCase(removeMovieFromLiked.fulfilled, (state, action) => {\r\n      state.movies = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    netflix: NetflixSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const { setGenres, setMovies } = NetflixSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}