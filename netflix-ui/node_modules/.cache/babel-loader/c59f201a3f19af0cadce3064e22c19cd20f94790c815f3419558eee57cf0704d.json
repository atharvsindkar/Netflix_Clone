{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATHARV\\\\Desktop\\\\netflix-clone-mern\\\\netflix-clone-mern\\\\netflix-ui\\\\src\\\\pages\\\\Movies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Navbar from \"../components/Navbar\";\nimport CardSlider from \"../components/CardSlider\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { firebaseAuth } from \"../utils/firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport SelectGenre from \"../components/SelectGenre\";\nimport Slider from \"../components/Slider\";\nimport NotAvailable from \"../components/NotAvailable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviePage() {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const movies = useSelector(state => state.netflix.movies);\n  const genres = useSelector(state => state.netflix.genres);\n  const genresLoaded = useSelector(state => state.netflix.genresLoaded);\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getGenres());\n  }, []);\n  useEffect(() => {\n    if (genresLoaded) {\n      dispatch(fetchMovies({\n        genres,\n        type: \"movie\"\n      }));\n    }\n  }, [genresLoaded]);\n  const [user, setUser] = useState(undefined);\n  onAuthStateChanged(firebaseAuth, currentUser => {\n    if (currentUser) {\n      setUser(currentUser.uid);\n      setEmail(currentUser.email);\n    } else navigate(\"/login\");\n  });\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\n    return () => window.onscroll = null;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        isScrolled: isScrolled,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(SelectGenre, {\n        genres: genres,\n        type: \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), movies.length ? /*#__PURE__*/_jsxDEV(Slider, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(NotAvailable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviePage, \"6pFT1+cRzCYg5Bixba+TYRzyEwI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate, useDispatch];\n});\n_c = MoviePage;\nconst Container = styled.div`\n  .data {\n    margin-top: 8rem;\n    .not-available {\n      text-align: center;\n      color: white;\n      margin-top: 4rem;\n    }\n  }\n`;\n_c2 = Container;\nexport default MoviePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MoviePage\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","styled","Navbar","CardSlider","onAuthStateChanged","firebaseAuth","useNavigate","useSelector","useDispatch","fetchMovies","getGenres","SelectGenre","Slider","NotAvailable","MoviePage","isScrolled","setIsScrolled","movies","state","netflix","genres","genresLoaded","email","setEmail","navigate","dispatch","type","user","setUser","undefined","currentUser","uid","window","onscroll","pageYOffset","length","Container","div"],"sources":["C:/Users/ATHARV/Desktop/netflix-clone-mern/netflix-clone-mern/netflix-ui/src/pages/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CardSlider from \"../components/CardSlider\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { firebaseAuth } from \"../utils/firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchMovies, getGenres } from \"../store\";\r\nimport SelectGenre from \"../components/SelectGenre\";\r\nimport Slider from \"../components/Slider\";\r\nimport NotAvailable from \"../components/NotAvailable\";\r\n\r\nfunction MoviePage() {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const movies = useSelector((state) => state.netflix.movies);\r\n  const genres = useSelector((state) => state.netflix.genres);\r\n  const genresLoaded = useSelector((state) => state.netflix.genresLoaded);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getGenres());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (genresLoaded) {\r\n      dispatch(fetchMovies({ genres, type: \"movie\" }));\r\n    }\r\n  }, [genresLoaded]);\r\n\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  onAuthStateChanged(firebaseAuth, (currentUser) => {\r\n    if (currentUser) {setUser(currentUser.uid);\r\n      setEmail(currentUser.email);}\r\n    else navigate(\"/login\");\r\n  });\r\n\r\n  window.onscroll = () => {\r\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\r\n    return () => (window.onscroll = null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"navbar\">\r\n        <Navbar isScrolled={isScrolled} email={email}  />\r\n      </div>\r\n      <div className=\"data\">\r\n        <SelectGenre genres={genres} type=\"movie\" />\r\n        {movies.length ? <Slider movies={movies} /> : <NotAvailable />}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  .data {\r\n    margin-top: 8rem;\r\n    .not-available {\r\n      text-align: center;\r\n      color: white;\r\n      margin-top: 4rem;\r\n    }\r\n  }\r\n`;\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}